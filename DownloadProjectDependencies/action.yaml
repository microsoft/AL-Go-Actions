name: Download Project Dependencies
author: Microsoft Corporation
description: Downloads the dependencies of an AL-Go project
inputs:
  shell:
    description: Shell in which you want to run the action (powershell or pwsh)
    required: false
    default: powershell
  project:
    description: Project for which to download dependencies
    required: true
  buildMode:
    description: Build mode used when building the artifacts
    required: true
  projectsDependenciesJson:
    description: A JSON object that matches eash project with its dependency projects
    required: true
  baselineWorkflowRunId:
    description: The ID of the workflow run that was used as baseline for the current build
    required: false
    default: '0'
outputs:
  DownloadedApps:
    description: A JSON-formatted array of paths to .app files of the apps that were downloaded
    value: ${{ steps.DownloadDependencies.outputs.DownloadedApps }}
  DownloadedTestApps:
    description: A JSON-formatted array of paths to .app files of the test apps that were downloaded
    value: ${{ steps.DownloadDependencies.outputs.DownloadedTestApps }}
runs:
  using: composite
  steps:
    - name: Download artifacts from current build
      uses: actions/download-artifact@v3
      with:
        path: ${{ github.workspace }}/.dependencies

    - name: Download project dependencies
      shell: ${{ inputs.shell }}
      id: DownloadDependencies
      env:
        _project: ${{ inputs.project }}
        _buildMode: ${{ inputs.buildMode }}
        _projectsDependenciesJson: ${{ inputs.projectsDependenciesJson }}
        _baseFolder: ${{ github.workspace }}
        _destinationPath: ${{ github.workspace }}/.dependencies
        _gitHubToken: ${{ github.token }}
        _baselineWorkflowRunId: ${{ inputs.baselineWorkflowRunId }}
      run: |
        $errorActionPreference = "Stop"; $ProgressPreference = "SilentlyContinue"; Set-StrictMode -Version 2.0
        try {
          ${{ github.action_path }}/DownloadProjectDependencies.Action.ps1 -project $ENV:_project -buildMode $ENV:_buildMode -projectsDependenciesJson $ENV:_projectsDependenciesJson -baselineWorkflowRunId $ENV:_baselineWorkflowRunId -baseFolder $ENV:_baseFolder -destinationPath $ENV:_destinationPath -token $ENV:_gitHubToken
        }
        catch {
          Write-Host "::ERROR::Unexpected error when running action. Error Message: $($_.Exception.Message.Replace("`r",'').Replace("`n",' ')), StackTrace: $($_.ScriptStackTrace.Replace("`r",'').Replace("`n",' <- '))"
          exit 1
        }
branding:
  icon: terminal
  color: blue
